territories
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = 'territories', fill = NOM) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = 'territories', fill = NOM) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = 'territories') + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories) + scale_fill_viridis()
ggplot(territories) + scale_fill_viridis()  + geom_sf_label(aes(label = NOM)) + labs(fill = ' ') + theme_bw()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories) + scale_fill_viridis()
geom_sf(data = territories) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories, fill = 'NOM') + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories, label = 'NOM') + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories, label = NOM) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories, , aes(label = NOM)) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + scale_fill_viridis()
ggplot(territories) +
geom_sf(fill = "#69b3a2", color = "white") +
theme_void()
ggplot(territories) +
geom_sf(fill = "#69b3a2", color = "white", label = NOM) +
theme_void()
ggplot(territories) +
geom_sf(fill = "#69b3a2", color = "white", label = 'NOM') +
theme_void()
ggplot(territories) +
geom_sf(fill = "#69b3a2", color = "white") + geom_sf_text(aes(label = NOM), colour = "black")
theme_void()
ggplot(territories) +
geom_sf(fill = "#a0a0a0", color = "white") + geom_sf_text(aes(label = NOM), colour = "black")
theme_void()
ggplot(territories) +
geom_sf(fill = "#a0a0a0", color = "white") + geom_sf_text(aes(label = NOM), colour = "black") +
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
theme_void()
ggplot(territories) +
geom_sf(fill = "#a0a0a0", color = "white") + geom_sf_text(aes(label = NOM), colour = "black") +
geom_raster(data =  as.data.frame(kde, xy = TRUE), aes(x = x, y = y, fill = Hotspot)) +
theme_void()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + geom_sf_text(aes(label = NOM), colour = "black") + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + scale_fill_viridis()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot))
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
library(geojsonio)
dataIPIS_sp <- geojson_read('cod_mines_curated_all_opendata_p_ipis.geojson', what='sp')
dataIPIS_sp$id <-rep("Hotspot",dim(dataIPIS_sp)[1])
head(dataIPIS_sp[,"id"])
kernelDRC = kernelUD(dataIPIS_sp[, "id"])
library(geojsonio)
dataIPIS_sp <- geojson_read('cod_mines_curated_all_opendata_p_ipis.geojson', what='sp')
dataIPIS_sp$id <-rep("Hotspot",dim(dataIPIS_sp)[1])
head(dataIPIS_sp[,"id"])
kernelDRC = kernelUD(dataIPIS_sp[, "id"])
library(sp)
library(sf)
library(dplyr)
library(tidyr)
library(tmap)
library(geojsonio)
dataIPIS_sp <- geojson_read('cod_mines_curated_all_opendata_p_ipis.geojson', what='sp')
dataIPIS_sp$id <-rep("Hotspot",dim(dataIPIS_sp)[1])
head(dataIPIS_sp[,"id"])
kernelDRC = kernelUD(dataIPIS_sp[, "id"])
library(geojsonio)
library(adehabitatHR)
dataIPIS_sp <- geojson_read('cod_mines_curated_all_opendata_p_ipis.geojson', what='sp')
dataIPIS_sp$id <-rep("Hotspot",dim(dataIPIS_sp)[1])
head(dataIPIS_sp[,"id"])
kernelDRC = kernelUD(dataIPIS_sp[, "id"])
library(raster)
kde <- raster(pixelkernel)
pixelkernel<-estUDm2spixdf(kernelDRC)
plot(pixelkernel)
library(raster)
kde <- raster(pixelkernel)
ggplot(territories) +
geom_sf(fill = "#a0a0a0", color = "white") + geom_sf_text(aes(label = NOM), colour = "black") +
geom_raster(data =  as.data.frame(kde, xy = TRUE), aes(x = x, y = y, fill = Hotspot)) +
theme_void()
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + scale_fill_viridis()
ggplot(territories) +
geom_sf(fill = "#a0a0a0", color = "white") + geom_sf_text(aes(label = NOM), colour = "black") +
geom_raster(data =  as.data.frame(kde, xy = TRUE), aes(x = x, y = y, fill = Hotspot)) +
theme_void()
kernelDRC
image(kernelDRC)
library(raster)
kde <- raster(pixelkernel)
projection(kde) <- CRS(proj4string(dataIPIS))
library(raster)
kde <- raster(pixelkernel)
projection(kde) <- CRS(proj4string(dataIPIS))
library(raster)
kde <- raster(pixelkernel)
projection(kde) <- CRS(proj4string(dataIPIS))
library(geojsonio)
library(adehabitatHR)
dataIPIS_sp <- geojson_read('cod_mines_curated_all_opendata_p_ipis.geojson', what='sp')
dataIPIS_sp$id <-rep("Hotspot",dim(dataIPIS_sp)[1])
head(dataIPIS_sp[,"id"])
kernelDRC = kernelUD(dataIPIS_sp[, "id"])
image(kernelDRC)
pixelkernel<-estUDm2spixdf(kernelDRC)
plot(pixelkernel)
library(raster)
kde <- raster(pixelkernel)
projection(kde) <- CRS(proj4string(dataIPIS))
library(raster)
kde <- raster(pixelkernel)
projection(kde) <- CRS(proj4string(dataIPIS_sp))
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot))
ggplot(data =  as.data.frame(kde, xy = TRUE)) +
geom_raster(aes(x = x, y = y, fill = Hotspot)) +
geom_sf(data = territories,  aes(label = NOM)) + scale_fill_viridis()
ggplot(territories) +
geom_sf(fill = "#a0a0a0", color = "white") + geom_sf_text(aes(label = NOM), colour = "black") +
geom_raster(data =  as.data.frame(kde, xy = TRUE), aes(x = x, y = y, fill = Hotspot)) +
theme_void()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
rm()
runApp()
runApp()
runApp()
dataIPIS <- st_read("data/cod_mines_curated_all_opendata_p_ipis.geojson")
ins_territoire <-read.csv('data/ins_territoire_drc.csv', sep = ';')
territories <-st_read("data/territoire", "Territoire")
dataIPIS <- dataIPIS %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
dataIPIS %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date)
dataIPIS
dataIPIS %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date)
dataIPIS <- st_read("data/cod_mines_curated_all_opendata_p_ipis.geojson")
ins_territoire <-read.csv('data/ins_territoire_drc.csv', sep = ';')
territories <-st_read("data/territoire", "Territoire")
dataIPIS <- dataIPIS %>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
dataIPIS <- dataIPIS %>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
dataIPIS %>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
dataIPIS %>%
st_drop_geometry() %>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
dataIPIS
dataIPIS %>%
st_drop_geometry()
dataIPIS %>%
st_drop_geometry() %>%
as.data.frame()
dataIPIS %>%
as.data.frame()
dataIPIS %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date)
dataIPIS %>%
st_drop_geometry()%>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
dataIPIS <- st_read("data/cod_mines_curated_all_opendata_p_ipis.geojson")
ins_territoire <-read.csv('data/ins_territoire_drc.csv', sep = ';')
territories <-st_read("data/territoire", "Territoire")
crs_ips <- st_crs(dataIPIS)
dataIPIS <- dataIPIS %>%
st_drop_geometry()%>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
runApp()
dataIPIS %>%
st_drop_geometry()%>%
as.data.frame()
ataIPIS %>%
st_drop_geometry()%>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date)
dataIPIS %>%
st_drop_geometry()%>%
as.data.frame() %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date)
dataIPIS <- st_read("data/cod_mines_curated_all_opendata_p_ipis.geojson")
dataIPIS <- dataIPIS %>%
select(pcode,visit_date, workers_numb,is_3t_mine,is_gold_mine, presence, visit_date) %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) ) %>%
filter(workers_numb < 1000)%>%
arrange(pcode, desc(visit_date)) %>%
group_by(pcode) %>%
slice(1)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tmap)
qtm(gwrMap, fill = "localR2")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("spgwr")
latlon <-st_transform(territories, crs = "+proj=longlat +datum=WGS84")
sf_cent <- st_centroid(latlon)
st_coordinates(sf_cent)
GWRbandwidth <- gwr.sel(meanWorkers_numb ~ sumIs_3t_mine +
sumIs_gold_mine + SumPresence, data=latlon, coords=st_coordinates(sf_cent) ,adapt =TRUE)
library("spgwr")
latlon <-st_transform(territories, crs = "+proj=longlat +datum=WGS84")
sf_cent <- st_centroid(latlon)
st_coordinates(sf_cent)
GWRbandwidth <- gwr.sel(meanWorkers_numb ~ sumIs_3t_mine +
sumIs_gold_mine + SumPresence, data=latlon, coords=st_coordinates(sf_cent) ,adapt =TRUE)
gwrModel = gwr(meanWorkers_numb ~ sumIs_3t_mine +
sumIs_gold_mine + SumPresence, data=latlon, adapt=GWRbandwidth,coords=st_coordinates(sf_cent), hatmatrix=TRUE, se.fit=TRUE)
gwrModel
runApp()
runApp()
runApp()
runApp()
tempKmeans <- territories %>%
st_drop_geometry() %>%
as.data.frame()
territoriesData <- territories %>%
st_drop_geometry() %>%
as.data.frame()
territoriesKmeans<- kmeans(territoriesData, 4, nstart = 50)
territoriesData <- territories %>%
filter(!is.na(visit_date) & !is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) )     %>%
st_drop_geometry() %>%
as.data.frame()
territoriesData <- territories %>%
filter(!is.na(workers_numb)& !is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) )     %>%
st_drop_geometry() %>%
as.data.frame()
territoriesData <- territories %>%
filter(!is.na(is_3t_mine)& !is.na(is_gold_mine)& !is.na(presence) )     %>%
st_drop_geometry() %>%
as.data.frame()
territories
territoriesData <- territories %>%
filter(!is.na(sumWorkers_numb) )     %>%
st_drop_geometry() %>%
as.data.frame()
territoriesKmeans<- kmeans(territoriesData, 4, nstart = 50)
territories
territoriesData <- territories %>%
select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
filter(!is.na(sumWorkers_numb) )     %>%
st_drop_geometry() %>%
as.data.frame()
territoriesData <- territories %>%
select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry() %>%
as.data.frame()
territories %>%
select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence)
territoriesData <- territories %>%
tidyverse::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry() %>%
as.data.frame()
territories %>%
dplyr::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence)
territories %>%
dplyr::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry() %>%
territories %>%
dplyr::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry() %>%
as.data.frame()
territoriesData <- territories %>%
dplyr::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry()
territoriesData <- territories %>%
dplyr::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry()
territoriesKmeans<- kmeans(territoriesData, 4, nstart = 50)
territoriesKmeans
territoriesKmeans<- kmeans(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence')], 4, nstart = 50)
territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence')]
territoriesData <- territories %>%
dplyr::select (meanWorkers_numb, sumWorkers_numb, sumIs_3t_mine, sumIs_gold_mine, SumPresence) %>%
st_drop_geometry()
territoriesKmeans<- kmeans(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence')]%>% st_drop_geometry(), 4, nstart = 50)
territoriesKmeans
territoriesKmeans<- kmeans(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence')]%>% st_drop_geometry(), 4, nstart = 50)
territoriesKmeans
territoriesKmeans$idCluster <-territoriesKmeans$cluster
qtm(territories, fill = "idCluster", text = "NOM", text.size = 0.5)
territoriesKmeans
territoriesKmeans$idCluster <-territoriesKmeans$cluster
territories$idCluster <-territoriesKmeans$cluster
qtm(territories, fill = "idCluster", text = "NOM", text.size = 0.5)
territories$idCluster <-territoriesKmeans$cluster
qtm(territories, fill = "idCluster", text = "NOM", text.size = 0.5)
territoriesKmeans$idCluster <-territoriesKmeans$cluster
qtm(territories, fill = "idCluster", text = "NOM", text.size = 0.5)
territoriesKmeans<- kmeans(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence')]%>% st_drop_geometry(), 4, nstart = 50)
territoriesKmeans
territoriesKmeans$idCluster <-territoriesKmeans$cluster
qtm(territories, fill = "idCluster", text = "NOM", text.size = 0.5)
territories
territoriesKmeans$idCluster <-territoriesKmeans$cluster
qtm(territories, fill = "idCluster", text = "NOM", text.size = 0.5)
ggplot(territories) +
geom_sf(aes(fill = idCluster)) +
geom_sf_label(aes(label = NOM)) +
theme_bw() +
labs(fill = ' ')
drc_choropleth <-ggplot(territories) +
geom_sf(aes(fill = idCluster)) +
geom_sf_text(aes(label = NOM)) +
theme_bw() +
labs(fill = ' ')
ggplot(territories) +
geom_sf(aes(fill = idCluster)) +
geom_sf_text(aes(label = NOM)) +
theme_bw() +
labs(fill = ' ')
ggplot(territories) +
geom_sf(aes(fill = idCluster, )) +
theme_bw() +
labs(fill = ' ')
ggplot(territories) +
geom_sf(aes(fill = idCluster, )) +
theme_bw() +
labs(fill = 'Class ')
ggplot(territories) +
geom_sf(aes(color = idCluster, )) +
theme_bw() +
labs(fill = 'Class ')
territoriesKmeans$idCluster <-territoriesKmeans$cluster
ggplot(territories) +
geom_sf(aes(fill = idCluster, )) +
theme_bw() +
labs(fill = 'Class ')
territoriesKmeans$idCluster <-territoriesKmeans$cluster
ggplot(territories) +
geom_sf(aes(fill = as.factor(idCluster) )) +
theme_bw() +
labs(fill = 'Class ')
classRegion <- territories %>% dplyr::select(NOM, idCluster) %>% st_drop_geometry()
classRegion
aggregate(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence', 'idCluster')], list(territories$idCluster), mean)
aggregate(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence', 'idCluster')]%>% st_drop_geometry(), list(territories$idCluster), mean)
territoriesSt <- scale(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence', 'idCluster')]%>% st_drop_geometry())
summary(territoriesSt)
territoriesSt <- scale(territories[, c('meanWorkers_numb', 'sumWorkers_numb', 'sumIs_3t_mine', 'sumIs_gold_mine', 'SumPresence')]%>% st_drop_geometry())
summary(territoriesSt)
territoriesNb <- poly2nb(territories)
summary(territoriesNb)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat$C2numeric <- stringr::str_extract(dat$C2, "\\-*\\d+\\.*\\d*")
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(0:1, 10, TRUE)))
df
datatable(df) %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
library(DT)
df %>% formatStyle(backgroundColor = styleInterval(brks, clrs))
brks <- quantile(df, probs = seq(.05, .95, .05), na.rm = TRUE)
clrs <- round(seq(255, 40, length.out = length(brks) + 1), 0) %>%
{paste0("rgb(255,", ., ",", ., ")")}
df %>% formatStyle(backgroundColor = styleInterval(brks, clrs))
datatable(df) %>% formatStyle(backgroundColor = styleInterval(brks, clrs))
datatable(df) %>% formatStyle(df,backgroundColor = styleInterval(brks, clrs))
library(DT)
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(0:1, 10, TRUE)))
datatable(df) %>% datatable(df) %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
datatable(df)  %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
brks <- quantile(df$V1, probs = seq(.05, .95, .05), na.rm = TRUE)
clrs <- round(seq(255, 40, length.out = length(brks) + 1), 0) %>%
{paste0("rgb(255,", ., ",", ., ")")}
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(0:1, 10, TRUE)))
datatable(df)  %>% formatStyle("V1", backgroundColor = styleInterval(brks, clrs))
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(100:1000, 10, TRUE)))
datatable(df)  %>% formatStyle("V1", backgroundColor = styleInterval(brks, clrs))
df = as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(100:1000, 10, TRUE)))
brks <- quantile(df$V1, probs = seq(.05, .95, .05), na.rm = TRUE)
clrs <- round(seq(255, 40, length.out = length(brks) + 1), 0) %>%
{paste0("rgb(255,", ., ",", ., ")")}
datatable(df)  %>% formatStyle("V1", backgroundColor = styleInterval(brks, clrs))
dt <- DT::datatable(data.frame('V1' = c(3,2,-1), 'V2' = c(3,-1,-7), 'V3' = c(3, -5,-12)))
datatable(df)  %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
dt
datatable(df)  %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
df <- DT::datatable(data.frame('V1' = c(3,2,-1), 'V2' = c(3,-1,-7), 'V3' = c(3, -5,-12)))
datatable(df)  %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
df
as.data.frame(cbind(matrix(round(rnorm(50), 3), 10), sample(100:1000, 10, TRUE)))
df
df <- DT::datatable(data.frame('V1' = c(3,2,-1), 'V2' = c(3,-1,-7), 'V3' = c(3, -5,-12))
datatable(df)  %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
df <- data.frame('V1' = c(3,2,-1), 'V2' = c(3,-1,-7), 'V3' = c(3, -5,-12))
df
datatable(df)  %>% formatStyle(names(df), backgroundColor = styleInterval(brks, clrs))
runApp()
getQuantile <-function(column){
brks <- quantile(column, probs = seq(.05, .95, .05), na.rm = TRUE)
})
getQuantile <-function(column){
brks <- quantile(column, probs = seq(.05, .95, .05), na.rm = TRUE)
})
getQuantile <-function(column){
brks <- quantile(column, probs = seq(.05, .95, .05), na.rm = TRUE)
}
getQuantile(df$V1)
getQuantile <-function(column){
brks <- quantile(column, probs = seq(.05, .95, .05), na.rm = TRUE)
brks
}
getQuantile(df$V1)
df <- data.frame('V1' = c(3,2,-1), 'V2' = c(3,-1,-7), 'V3' = c(30, 500,600))
getQuantile(df$V3)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
